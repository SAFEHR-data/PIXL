#  Copyright (c) 2022 University College London Hospitals NHS Foundation Trust
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
from __future__ import annotations

import datetime

import pytest
from core.db.models import Extract, Image
from pixl_dcmd._database import get_unexported_image
from pixl_dcmd._dicom_helpers import StudyInfo
from sqlalchemy.orm import Session

STUDY_DATE = datetime.date.fromisoformat("2023-01-01")
TEST_PROJECT_SLUG = "test-extract-uclh-omop-cdm"


@pytest.fixture()
def row_for_database_testing(db_session) -> Session:
    """
    Insert a test row for the fake DICOM dataset generated by
    pytest_pixl.dicom.generate_dicom_dataset.
    """
    extract = Extract(slug=TEST_PROJECT_SLUG)
    study_info = StudyInfo(
        mrn="123456",
        accession_number="abcde",
        study_uid="1.2.3.4.5",
    )

    image_not_exported = Image(
        mrn=study_info.mrn,
        accession_number=study_info.accession_number,
        study_uid=study_info.study_uid,
        study_date=STUDY_DATE,
        extract=extract,
    )
    with db_session:
        db_session.add_all([extract, image_not_exported])
        db_session.commit()

    return db_session


def test_get_unexported_image_fallback(row_for_database_testing, db_session):
    """
    GIVEN a database entry with a non-exported image
    WHEN we query that image with a non-matching study UID
    THEN the querying should fall back to querying on MRN and accession number and return the image.
    """
    wrong_uid_info = StudyInfo(mrn="123456", accession_number="abcde", study_uid="nope")
    result = get_unexported_image(TEST_PROJECT_SLUG, wrong_uid_info, db_session)
    assert result
