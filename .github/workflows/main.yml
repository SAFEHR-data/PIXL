#  Copyright (c) University College London Hospitals NHS Foundation Trust
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
name: pixl-ci

on:
    push:
        branches:
            - main
    pull_request:
    workflow_dispatch:

# Only run actions on the most recent push to a branch
concurrency:
    group: "${{ github.workflow }}-${{ github.head_ref }}"
    cancel-in-progress: true

jobs:
    lint:
        runs-on: ubuntu-22.04
        timeout-minutes: 5
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Run pre-commit
              uses: pre-commit/action@v3.0.1
              with:
                  extra_args: --all-files

            - name: Validate Docker Compose config file
              working-directory: .
              run: |
                  cp .env.sample .env
                  docker compose config --quiet

    test:
        runs-on: ubuntu-22.04
        timeout-minutes: 30
        strategy:
            fail-fast: false # run all tests if even if one fails
            matrix:
                package_dir: [pixl_core, hasher, pixl_dcmd, cli, pixl_export, pixl_imaging]

        steps:
            - uses: actions/checkout@v4

            - name: Init Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
                  cache: "pip"

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -e pytest-pixl/
                  pip install -e pixl_core/[test]
                  pip install -e ${{ matrix.package_dir }}/[test]

            - name: Run tests and generate coverage report
              working-directory: ${{ matrix.package_dir }}
              run: pytest --cov --cov-report=xml
              env:
                  ENV: test
                  AZURE_KEY_VAULT_NAME: test
                  AZURE_KEY_VAULT_SECRET_NAME: test

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v4.2.0
              with:
                  directory: ${{ matrix.package_dir }}
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    system-test:
        if: ${{ ! github.event.pull_request.draft || contains(github.event.pull_request.title, '[force-system-test]') }}
        runs-on: ubuntu-22.04
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v4
            - uses: docker/setup-buildx-action@v3
            - name: Init Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
                  cache: "pip"

            - name: Install Python dependencies
              # The -e option is required here due to the way the
              # code determines the export directory. See issue #318.
              run: |
                  pip install -e pixl_core/[test]
                  pip install -e pytest-pixl/
                  pip install -e cli/[test]

            - name: Create .secrets.env
              run: touch test/.secrets.env

            - name: Build test services
              working-directory: test
              run: |
                  docker compose build

            - name: Build services
              run: |
                  docker compose build

            - name: Run tests
              working-directory: test
              env:
                  EXPORT_AZ_CLIENT_ID: ${{ secrets.EXPORT_AZ_CLIENT_ID }}
                  EXPORT_AZ_CLIENT_PASSWORD: ${{ secrets.EXPORT_AZ_CLIENT_PASSWORD }}
                  EXPORT_AZ_TENANT_ID: ${{ secrets.EXPORT_AZ_TENANT_ID }}
                  EXPORT_AZ_KEY_VAULT_NAME: ${{ secrets.EXPORT_AZ_KEY_VAULT_NAME }}
                  HASHER_API_AZ_CLIENT_ID: ${{ secrets.EXPORT_AZ_CLIENT_ID }}
                  HASHER_API_AZ_CLIENT_PASSWORD: ${{ secrets.EXPORT_AZ_CLIENT_PASSWORD }}
                  HASHER_API_AZ_TENANT_ID: ${{ secrets.EXPORT_AZ_TENANT_ID }}
                  HASHER_API_AZ_KEY_VAULT_NAME: ${{ secrets.EXPORT_AZ_KEY_VAULT_NAME }}
              run: |
                  ./run-system-test.sh coverage
                  echo FINISHED SYSTEM TEST SCRIPT

            - name: Dump export-api docker logs for debugging
              if: ${{ failure() }}
              run: |
                  docker logs -t system-test-export-api-1 2>&1

            - name: Dump orthanc-anon docker logs for debugging
              if: ${{ failure() }}
              run: |
                  docker logs -t system-test-orthanc-anon-1 2>&1

            - name: Dump imaging-api docker logs for debugging
              if: ${{ failure() }}
              run: |
                  docker logs -t system-test-imaging-api-1 2>&1

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v4.2.0
              with:
                directory: test
              env:
                CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}