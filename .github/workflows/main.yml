#  Copyright (c) University College London Hospitals NHS Foundation Trust
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
name: pixl-ci

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Only run actions on the most recent push to a branch
concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref }}"
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

      - name: Validate Docker Compose config file
        working-directory: .
        run: |
          cp .env.sample .env
          docker compose config --quiet

  hasher-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Init Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install package
        run: |
          pip install hasher/[test]

      - name: Run tests
        working-directory: hasher
        run: pytest
        env:
          ENV: test
          AZURE_KEY_VAULT_NAME: test
          AZURE_KEY_VAULT_SECRET_NAME: test

  core-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Init Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          pip install pytest-pixl/ pixl_core/[test]

      - name: Run tests
        working-directory: pixl_core/tests
        run: |
          pytest
        env:
          ENV: test

  dicom-de-id-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Init Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e pixl_core
          pip install -e pytest-pixl
          pip install -e pixl_dcmd[test]

      - name: Run tests
        working-directory: pixl_dcmd
        run: |
          bin/run-tests.sh
        env:
          ENV: test

  cli-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Init Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          pip install -e pixl_core/
          pip install -e pytest-pixl/
          pip install -e cli/[test]

      - name: Run tests
        working-directory: cli/tests
        run: |
          pytest

  ehr-api-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Init Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          pip install pytest-pixl/ pixl_core/ pixl_ehr/[test]

      - name: Run tests
        working-directory: pixl_ehr/tests
        run: |
          pytest

  imaging-api-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Init Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          pip install pixl_core/ pixl_imaging/[test]

      - name: Run tests
        working-directory: pixl_imaging/tests
        run: |
          ./run-tests.sh

  system-test:
    if: ${{ ! github.event.pull_request.draft || contains(github.event.pull_request.title, '[force-system-test]') }}
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Init Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        # The -e option is required here due to the way the
        # code determines the export directory. See issue #318.
        run: |
          pip install -e pixl_core/
          pip install -e pytest-pixl/
          pip install -e cli/[test]

      - name: Create .secrets.env
        run: touch .secrets.env

      - name: Run tests
        working-directory: test
        env:
          EXPORT_AZ_CLIENT_ID: ${{ secrets.EXPORT_AZ_CLIENT_ID }}
          EXPORT_AZ_CLIENT_PASSWORD: ${{ secrets.EXPORT_AZ_CLIENT_PASSWORD }}
          EXPORT_AZ_TENANT_ID: ${{ secrets.EXPORT_AZ_TENANT_ID }}
          EXPORT_AZ_KEY_VAULT_NAME: ${{ secrets.EXPORT_AZ_KEY_VAULT_NAME }}
        run: |
          
          # These two variables are needed for creating the pixl user and group on the GHA runner.
          # Don't worry about passing them into pytest if you're running pytest manually or through your
          # IDE - they're only used inside an "if GITHUB_ACTIONS" block anyway.
          # We could do this in the setup function, but we don't at that point know the location of the
          # exports dir (how the exports dir is determined is due to change anyway)
          source .env
          export PIXL_USER_UID PIXL_USER_GID
          sudo --non-interactive groupadd --gid $PIXL_USER_GID pixl
          sudo --non-interactive useradd --uid $PIXL_USER_UID --gid pixl --groups docker pixl
          sudo --non-interactive chown -R pixl:docker host_export_root_dir
          sudo --non-interactive chmod -R ug+rwx host_export_root_dir
          
          sudo -u pixl -g pixl ./run-system-test.sh
          echo FINISHED SYSTEM TEST SCRIPT

      - name: Dump ehr-api docker logs for debugging
        if: ${{ failure() }}
        run: |
          docker logs -t system-test-ehr-api-1 2>&1

      - name: Dump orthanc-anon docker logs for debugging
        if: ${{ failure() }}
        run: |
          docker logs -t system-test-orthanc-anon-1 2>&1

      - name: Dump imaging-api docker logs for debugging
        if: ${{ failure() }}
        run: |
          docker logs -t system-test-imaging-api-1 2>&1
