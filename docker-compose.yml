#  Copyright (c) University College London Hospitals NHS Foundation Trust
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
version: "3.8"

################################################################################
# Common

x-http-proxy: &http-proxy ${HTTP_PROXY}
x-https-proxy: &https-proxy ${HTTPS_PROXY}
x-no-proxy: &no-proxy localhost,127.0.0.1,uclvlddpragae07,hasher-api,orthanc-raw
x-proxy-common: &proxy-common
  HTTP_PROXY: *http-proxy
  http_proxy: *http-proxy
  HTTPS_PROXY: *https-proxy
  https_proxy: *https-proxy
  NO_PROXY: *no-proxy
  no_proxy: *no-proxy

x-build-args-common: &build-args-common
  <<: *proxy-common

x-pixl-common-env: &pixl-common-env
  ENV: ${ENV}
  DEBUG: ${DEBUG}

x-emap-db: &emap-db
  EMAP_UDS_HOST: ${EMAP_UDS_HOST}
  EMAP_UDS_PORT: ${EMAP_UDS_PORT}
  EMAP_UDS_NAME: ${EMAP_UDS_NAME}
  EMAP_UDS_USER: ${EMAP_UDS_USER}
  EMAP_UDS_PASSWORD: ${EMAP_UDS_PASSWORD}

x-pixl-db: &pixl-db
  PIXL_DB_HOST: ${PIXL_DB_HOST}
  PIXL_DB_PORT: ${PIXL_DB_PORT}
  PIXL_DB_USER: ${PIXL_DB_USER}
  PIXL_DB_PASSWORD: ${PIXL_DB_PASSWORD}
  PIXL_DB_NAME: ${PIXL_DB_NAME}

x-logs-volume: &logs-volume
  type: volume
  source: logs
  target: /logs

volumes:
  logs:
  orthanc-anon-data:
  orthanc-raw-data:
  postgres-data:

networks:
  pixl-net:

################################################################################
# Services
services:

  hasher-api:
    build:
      context: .
      dockerfile: ./docker/hasher-api/Dockerfile
      args:
        <<: *build-args-common
    environment:
      <<: *proxy-common
      <<: *pixl-common-env
      AZURE_CLIENT_ID: ${HASHER_API_AZ_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${HASHER_API_AZ_CLIENT_PASSWORD}
      AZURE_TENANT_ID: ${HASHER_API_AZ_TENANT_ID}
      AZURE_KEY_VAULT_NAME: ${HASHER_API_AZ_KEY_VAULT_NAME}
      AZURE_KEY_VAULT_SECRET_NAME: ${HASHER_API_AZ_KEY_VAULT_SECRET_NAME}
    env_file:
      - ./docker/common.env
    ports:
      - "${HASHER_API_PORT}:8000"
    volumes:
      - *logs-volume
    networks:
      - pixl-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://hasher-api:8000/heart-beat" ]
      interval: 10s
      timeout: 30s
      retries: 5
    restart: "no"

  orthanc-anon:
    build:
      context: .
      dockerfile: ./docker/orthanc-anon/Dockerfile
      args:
        <<: *build-args-common
    command: /run/secrets
    environment:
      ORTHANC_NAME: "PIXL: Anon"
      ORTHANC_USERNAME: ${ORTHANC_ANON_USERNAME}
      ORTHANC_PASSWORD: ${ORTHANC_ANON_PASSWORD}
      ORTHANC_ANON_AE_TITLE: ${ORTHANC_ANON_AE_TITLE}
      ORTHANC_RAW_AE_TITLE: ${ORTHANC_RAW_AE_TITLE}
      ORTHANC_RAW_DICOM_PORT: "4242"
      ORTHANC_RAW_HOSTNAME: "orthanc-raw"
      DICOM_WEB_PLUGIN_ENABLED: ${ENABLE_DICOM_WEB}
      HASHER_API_AZ_NAME: ${HASHER_API_AZ_NAME}
      HASHER_API_PORT: 8000
      HTTP_TIMEOUT: ${ORTHANC_ANON_HTTP_TIMEOUT}
      AZ_DICOM_ENDPOINT_NAME: ${AZ_DICOM_ENDPOINT_NAME}
      AZ_DICOM_ENDPOINT_URL: ${AZ_DICOM_ENDPOINT_URL}
      AZ_DICOM_ENDPOINT_TOKEN: ${AZ_DICOM_ENDPOINT_TOKEN}
      AZ_DICOM_ENDPOINT_CLIENT_ID: ${AZ_DICOM_ENDPOINT_CLIENT_ID}
      AZ_DICOM_ENDPOINT_CLIENT_SECRET: ${AZ_DICOM_ENDPOINT_CLIENT_SECRET}
      AZ_DICOM_ENDPOINT_TENANT_ID: ${AZ_DICOM_ENDPOINT_TENANT_ID}
      AZ_DICOM_TOKEN_REFRESH_SECS: "600"
      <<: *proxy-common
      <<: *pixl-common-env
    ports:
      - "${ORTHANC_ANON_DICOM_PORT}:4242"
      - "${ORTHANC_ANON_WEB_PORT}:8042"
    volumes:
      - type: volume
        source: orthanc-anon-data
        target: /var/lib/orthanc/db
      - ${PWD}/orthanc/orthanc-anon/config:/run/secrets:ro
    networks:
      - pixl-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "-u" , "${ORTHANC_ANON_USERNAME}:${ORTHANC_ANON_PASSWORD}", "http://orthanc-anon:8042/heart-beat" ]
      interval: 10s
      timeout: 30s
      retries: 5
    restart: "no"

  orthanc-raw:
    build:
      context: .
      dockerfile: ./docker/orthanc-raw/Dockerfile
      args:
        <<: *build-args-common
    command: /run/secrets
    environment:
      ORTHANC_NAME: "PIXL: Raw"
      ORTHANC_USERNAME: ${ORTHANC_RAW_USERNAME}
      ORTHANC_PASSWORD: ${ORTHANC_RAW_PASSWORD}
      ORTHANC_RAW_AE_TITLE: ${ORTHANC_RAW_AE_TITLE}
      VNA_AE_TITLE : ${VNA_AE_TITLE}
      VNA_DICOM_PORT: ${VNA_DICOM_PORT}
      VNA_IP_ADDR: ${VNAQR_IP_ADDR}
      VNAQR_AE_TITLE : ${VNAQR_AE_TITLE}
      VNAQR_DICOM_PORT: ${VNAQR_DICOM_PORT}
      VNAQR_IP_ADDR: ${VNA_IP_ADDR}
      ORTHANC_ANON_AE_TITLE: ${ORTHANC_ANON_AE_TITLE}
      ORTHANC_ANON_DICOM_PORT: "4242"
      ORTHANC_ANON_HOSTNAME: "orthanc-anon"
      <<: *pixl-db
      <<: *proxy-common
      <<: *pixl-common-env
    ports:
      - "${ORTHANC_RAW_DICOM_PORT}:4242"
      - "${ORTHANC_RAW_WEB_PORT}:8042"
    volumes:
      - type: volume
        source: orthanc-raw-data
        target: /var/lib/orthanc/db
      - ${PWD}/orthanc/orthanc-raw/config:/run/secrets:ro
    networks:
      - pixl-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "-u" , "${ORTHANC_RAW_USERNAME}:${ORTHANC_RAW_PASSWORD}", "http://orthanc-raw:8042/heart-beat" ]
      interval: 10s
      timeout: 30s
      retries: 5
    restart: "no"

  queue:
    image: rabbitmq:3.11.2-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - pixl-net

  ehr-api:
    build:
      context: .
      dockerfile: ./docker/ehr-api/Dockerfile
    environment:
      <<: *pixl-db
      <<: *emap-db
      <<: *proxy-common
      <<: *pixl-common-env
      AZURE_CLIENT_ID: ${PIXL_EHR_API_AZ_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${PIXL_EHR_API_AZ_CLIENT_SECRET}
      AZURE_TENANT_ID: ${PIXL_EHR_API_AZ_TENANT_ID}
      AZ_STORAGE_ACCOUNT_NAME: ${PIXL_EHR_API_AZ_STORAGE_ACCOUNT_NAME}
      AZ_STORAGE_CONTAINER_NAME: ${PIXL_EHR_API_AZ_STORAGE_CONTAINER_NAME}
      # TODO: rabbitMQ params
    env_file:
      - ./docker/common.env
    depends_on:
      queue:
        condition: service_healthy
      postgres:
        condition: service_healthy
      hasher-api:
        condition: service_healthy
    ports:
      - "${PIXL_EHR_API_PORT}:8000"
      - "443:443"
    healthcheck:
      interval: 10s
      timeout: 30s
      retries: 5
    networks:
      - pixl-net

  ################################################################################
  # Data Stores
  postgres:
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
      args:
        <<: *build-args-common
    environment:
      POSTGRES_USER: ${PIXL_DB_USER}
      POSTGRES_PASSWORD: ${PIXL_DB_PASSWORD}
      PIXL_DB_NAME: ${PIXL_DB_NAME}
      PGTZ: Europe/London
    env_file:
      - ./docker/common.env
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${PIXL_DB_PORT}"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${PIXL_DB_USER}" ]
      interval: 10s
      timeout: 30s
      retries: 5
    restart: always
    networks:
      - pixl-net
