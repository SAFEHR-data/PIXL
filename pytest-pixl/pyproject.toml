[project]
name = "pytest-pixl"
version = "0.2.0rc0"
authors = [{ name = "PIXL authors" }]
description = "Pytest plugin for PIXL"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3"
]
dependencies = [
    "pydicom==2.4.4",
    "pyftpdlib==2.0.1",
    "pyOpenSSL==24.3.0",
    "python-decouple==3.8",
    "pytest-loguru==0.4.0",
    "requests==2.32.3",
]

[project.optional-dependencies]
test = [
    "core==0.2.0rc0",
]
dev = [
    "core[dev]==0.2.0rc0",
]

[build-system]
requires = ["hatchling>=1.0.0"]
build-backend = "hatchling.build"


[tool.hatch.build.targets.wheel]
dev-mode-dirs = [
    "src"
]


[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug:",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Others
    "if settings.DEBUG",
    "except subprocess.CalledProcessError as exception:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING",
    "class .*\\bProtocol\\):",
]

[tool.setuptools.package-data]
pytest_pixl = ["*.key", "*.crt"]

[tool.ruff]
extend = "../ruff.toml"

[tool.ruff.lint.extend-per-file-ignores]
"./tests/**" = ["D100"]

[project.entry-points.pytest11]
pytest_pixl = "pytest_pixl.plugin"
