[project]
name = "core"
version = "0.2.0rc0"
authors = [{ name = "PIXL core functionality" }]
description = ""
readme = "README.md"
requires-python = ">=3.9"
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
    "aio_pika==9.4.2",
    "azure-identity==1.16.1",
    "azure-keyvault==4.2.0",
    "fastapi==0.112.0",
    "jsonpickle==3.2.2",
    "loguru==0.7.3",
    "pandas==2.2.3",
    "pika==1.3.2",
    "psycopg2-binary==2.9.9",
    "pyarrow==17.0.0",
    "pydantic==2.8.2",
    "python-decouple==3.8",
    "python-slugify==8.0.4",
    "PyYAML==6.0.2",
    "requests==2.32.3",
    "sqlalchemy==2.0.36",
    "token-bucket==0.3.0",
    "xnat==0.6.2",
]

[project.optional-dependencies]
test = [
    "httpx==0.27.*",
    "pytest==8.3.4",
    "pytest-asyncio==0.24.0",
    "pytest-check==2.3.1",
    "pytest-cov==5.0.0",
    "pytest-pixl==0.2.0rc0",
    "xnat4tests==0.3.12",
]
dev = [
    "mypy",
    "pre-commit",
    "ruff",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
markers = ["pika"]

[tool.ruff]
extend = "../ruff.toml"

[tool.ruff.lint.extend-per-file-ignores]
"./tests/**" = ["D100"]


[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "except subprocess.CalledProcessError as exception:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
